<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CMCS</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-primary border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-file-invoice-dollar"></i> CMCS
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    @if (Context.Session.GetString("UserID") != null)
                    {
                        <ul class="navbar-nav flex-grow-1">
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="@GetDashboardController()" asp-action="Dashboard">
                                    <i class="fas fa-tachometer-alt"></i> Dashboard
                                </a>
                            </li>
                            @if (Context.Session.GetString("Role") == "Lecturer")
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Claim" asp-action="Submit">
                                        <i class="fas fa-plus-circle"></i> Submit Claim
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Claim" asp-action="MyClaims">
                                        <i class="fas fa-history"></i> My Claims
                                    </a>
                                </li>
                            }
                            @if (Context.Session.GetString("Role") == "Coordinator" || Context.Session.GetString("Role") == "Manager")
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Approval" asp-action="@GetApprovalAction()">
                                        <i class="fas fa-tasks"></i> Review Claims
                                    </a>
                                </li>
                            }
                        </ul>
                        <ul class="navbar-nav">
                            <!-- Status Notifications -->
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-bell"></i>
                                    <span class="badge bg-danger" id="pendingClaimsCount">0</span>
                                </a>
                                <ul class="dropdown-menu" id="statusNotifications">
                                    <li><a class="dropdown-item" href="#">Loading notifications...</a></li>
                                </ul>
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-user"></i> @Context.Session.GetString("FullName")
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#"><i class="fas fa-id-badge"></i> @Context.Session.GetString("Role")</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="dropdown-item">
                                                <i class="fas fa-sign-out-alt"></i> Logout
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    }
                    else
                    {
                        <ul class="navbar-nav ms-auto">
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">
                                    <i class="fas fa-sign-in-alt"></i> Login
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Register">
                                    <i class="fas fa-user-plus"></i> Register
                                </a>
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - Contract Monthly Claim System (CMCS)
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @if (Context.Session.GetString("UserID") != null)
    {
        <script>
            function updateStatusNotifications() {
                fetch('/Claim/GetPendingClaimsCount')
                    .then(response => response.json())
                    .then(data => {
                        const countElement = document.getElementById('pendingClaimsCount');
                        const notificationsElement = document.getElementById('statusNotifications');

                        countElement.textContent = data.count;

                        if (data.count > 0) {
                            notificationsElement.innerHTML = `
                                <li><a class="dropdown-item fw-bold" href="@GetNotificationLink()">You have ${data.count} pending items</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="/Claim/Submit">Submit new claim</a></li>
                            `;
                        } else {
                            notificationsElement.innerHTML = `
                                <li><a class="dropdown-item" href="#">No pending items</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="/Claim/Submit">Submit new claim</a></li>
                            `;
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching notifications:', error);
                    });
            }

            // Update notifications on page load and every 30 seconds
            document.addEventListener('DOMContentLoaded', function() {
                updateStatusNotifications();
                setInterval(updateStatusNotifications, 30000);
            });
        </script>
    }

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

@functions {
    private string GetDashboardController()
    {
        var role = Context.Session.GetString("Role");
        return role?.ToLower() switch
        {
            "lecturer" => "Lecturer",
            "coordinator" => "Approval",
            "manager" => "Approval",
            _ => "Home"
        };
    }

    private string GetApprovalAction()
    {
        var role = Context.Session.GetString("Role");
        return role?.ToLower() switch
        {
            "coordinator" => "CoordinatorDashboard",
            "manager" => "ManagerDashboard",
            _ => "Index"
        };
    }

    private string GetNotificationLink()
    {
        var role = Context.Session.GetString("Role");
        return role?.ToLower() switch
        {
            "lecturer" => "/Claim/MyClaims",
            "coordinator" => "/Approval/CoordinatorDashboard",
            "manager" => "/Approval/ManagerDashboard",
            _ => "#"
        };
    }
}